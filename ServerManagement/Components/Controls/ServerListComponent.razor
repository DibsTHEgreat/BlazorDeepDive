@*

	@if (this.servers != null && this.servers.Count > 0)
	{
		
			There are typically some conditions when it comes to virtualization.
			1. Using a foreach loop and you have too many items to render
			2. The size (height) of each item is the same
		
	<ul class="list-unstyled">
		<Virtualize Items="this.servers" Context="server">
			<ServerComponent Server="server"></ServerComponent>
		</Virtualize>
	</ul>
	}
*@

@* <ul class="list-unstyled">
	<RepeaterComponent Items="this.servers">
		<Row Context="server">
			<ServerComponent Server="server"></ServerComponent>
		</Row>
	</RepeaterComponent>
</ul> *@

<table class="table table-striped">
	<RepeaterComponent Items="this.servers">
		<Header>
			<thead>
				<tr>
					<th>
						Name
					</th>
					<th>
						City
					</th>
					<th>
						Status
					</th>
					<th>
						People Online
					</th>
					<th></th>
					<th></th>
				</tr>
			</thead>
		</Header>
		<Row Context="server">
			<ServerComponent Server="server"></ServerComponent>
		</Row>
	</RepeaterComponent>
</table>

@code {
	[Parameter]
	public string? CityName { get; set; }

	@*Question to ask Chat later, does the order in which attributes are called matter?*@
	[Parameter]
	public string? SearchFilter { get; set; } = "";

	private List<Server>? servers;

	protected override void OnParametersSet()
	{
		if (string.IsNullOrWhiteSpace(this.SearchFilter))
		{
			servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
		}
		else
		{
			servers = ServersRepository.SearchServers(this.SearchFilter);
		}
	}

}
