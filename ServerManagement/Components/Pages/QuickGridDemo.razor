@page "/quickgrid"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager


<h3>QuickGridDemo</h3>
<br />

@if (servers != null)
{
	<QuickGrid Items="servers.AsQueryable()" Pagination="paginationState">
		<PropertyColumn Property="s => s.Name">

		</PropertyColumn>
		<PropertyColumn Property="s => s.City" Sortable="true">

		</PropertyColumn>
		@* With template columns you provide the HTML and can still use basic attributes for this column.*@
		@*Blazor gives lots of options for sorting when it comes for template columns*@
		<TemplateColumn Title="Status" Sortby="GridSort<Server>.ByAscending(s => s.IsOnline)">
			@if(context.IsOnline)
			{
				<div style="color:green">
					Online
				</div>
			}
			else
			{
				<div style="color:red">
					Offline
				</div>
			}
		</TemplateColumn>
		<TemplateColumn Title="Userbase">
			@if (context.IsOnline)
			{
				Random random = new Random();
				int randomNumber = random.Next(0, 500);
				<text>@randomNumber</text>
			}
			else
			{
				<text>N/A</text>
			}
		</TemplateColumn>
		<TemplateColumn>
			@if (context.IsOnline)
			{
				<button type="button"
				class="btn btn-outline-danger"
				@onclick="@(()=> { context.IsOnline = false;})">
					Turn Off
				</button>
			}
			else
			{
				<button type="button"
				class="btn btn-outline-success"
				@onclick="@(()=> { context.IsOnline = true;})">
					Turn On
				</button>
			}
		</TemplateColumn>
		<TemplateColumn>
			<a href="/servers/@context.ServerId" class="btn btn-outline-primary">Edit</a>
		</TemplateColumn>
		<TemplateColumn>
			<ChildContent Context="servers">
				<EditForm Model="servers"
				FormName="@($"form-Server-{servers.ServerId}")"
				OnValidSubmit="@(() => { DeleteServer(servers.ServerId); })">
					<button type="submit" class="btn btn-primary">Delete</button>
				</EditForm>
			</ChildContent>
		</TemplateColumn>
	</QuickGrid>
	<Paginator State="paginationState"></Paginator>
}

@code {
	private List<Server>? servers = ServersRepository.GetServres();

	private PaginationState paginationState = new PaginationState { ItemsPerPage = 5 };

	private void DeleteServer(int serverId)
	{
		if (serverId > 0)
		{
			ServersRepository.DeleteServer(serverId);
			NavigationManager.NavigateTo("/quickgrid", true);
		}
	}
}
